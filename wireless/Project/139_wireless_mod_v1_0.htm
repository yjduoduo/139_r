<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\139_r\wireless\Project\139_wireless_mod_v1_0.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\139_r\wireless\Project\139_wireless_mod_v1_0.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Tue Mar 04 08:49:12 2014
<BR><P>
<H3>Maximum Stack Usage =         60 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; hardware_init &rArr; lcd_init &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[ad]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[23]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from i2c.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">PWM1_IRQHandler</a> from pwm.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from delay.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_lpc17xx.o(.text) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[32]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[32]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[33]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[35]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b1]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b2]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[b3]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[36]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b5]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[3f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[34]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[38]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[cf]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; hardware_init &rArr; lcd_init &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[ae]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[40]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3c]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = main &rArr; hardware_init &rArr; lcd_init &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DelayUs2x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay1Ms
</UL>

<P><STRONG><a name="[43]"></a>Delay1Ms</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs2x
</UL>

<P><STRONG><a name="[16]"></a>PWM1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pwm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>PWM_Init</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[ab]"></a>PWM1_Set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[d2]"></a>PWM1_Start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>PWM1_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>SystemClockUpdate</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[da]"></a>Get_CTime0Def</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>Set_CTime0Def</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>Sel_CTime0Def</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>Get_Timer_100us</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>Get_Timer_200us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timedef.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[de]"></a>Get_Timer_600us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>Get_Timer_2ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>Get_Timer_5ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>Get_Timer_8ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>Get_Timer_10ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timedef.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[a6]"></a>Get_Timer_20ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timedef.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[e2]"></a>AddTwoFallEdgeCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>ClrTwoFallEdgeCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>GetTwoFallEdgeCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>AddRisedgeCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>ClrRisedgeCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>GetRisedgeCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e8]"></a>AddWait2msCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[e9]"></a>ClrWait2msCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>GetWait2msCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>Is2msArrived</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[ec]"></a>Enable2ms</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>Disable2ms</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>Get2msState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>Set2msArrived</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>Get2msArrived</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>Clr2msArrived</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timedef.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>uart0_pconp_conf</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[47]"></a>uart0_pin_conf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[48]"></a>uart0_enable</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart0_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[45]"></a>uart0_init</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart0_init &rArr; uart0_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_pin_conf
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_pconp_conf
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[f2]"></a>uart0_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>uart0_sendbyte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_sendstring
</UL>

<P><STRONG><a name="[4a]"></a>uart0_getbyte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getstring
</UL>

<P><STRONG><a name="[49]"></a>uart0_getstring</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getbyte
</UL>

<P><STRONG><a name="[4b]"></a>uart0_sendstring</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_sendbyte
</UL>

<P><STRONG><a name="[4e]"></a>uart1_pconp_conf</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[4f]"></a>uart1_pin_conf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[4d]"></a>uart1_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart1_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_pin_conf
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_pconp_conf
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[52]"></a>uart1_enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>

<P><STRONG><a name="[f3]"></a>uart1_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>uart1_sendbyte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_sendstring
</UL>

<P><STRONG><a name="[53]"></a>uart1_sendstring</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_sendbyte
</UL>

<P><STRONG><a name="[56]"></a>uart1_getbyte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getstring
</UL>

<P><STRONG><a name="[55]"></a>uart1_getstring</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getbyte
</UL>

<P><STRONG><a name="[f4]"></a>UARTSend</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>timer_all_init</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, timer_all.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_all_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[f5]"></a>enable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, timer_all.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>disable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, timer_all.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>reset_timer</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, timer_all.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>Wait_I2c_End</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteNByte
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadNByte
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRcvByte
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISendByte
</UL>

<P><STRONG><a name="[5b]"></a>i2c0_pconp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[5c]"></a>i2c0_pin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[5d]"></a>i2c0_con_conf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[5e]"></a>i2c0_enable</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c0_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CIntStart
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[5a]"></a>i2c0_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c0_init &rArr; i2c0_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_con_conf
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_pin
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_pconp
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[f8]"></a>i2c0_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>I2CIntStart</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
</UL>

<P><STRONG><a name="[60]"></a>ISendByte</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[62]"></a>IRcvByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[63]"></a>I2C_ReadNByte</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[64]"></a>I2C_WriteNByte</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_I2c_End
</UL>

<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 576 bytes, Stack size 0 bytes, i2c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>gpio_init</STRONG> (Thumb, 446 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[f9]"></a>SSP_SSELToggle</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>ssp1_init</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[66]"></a>spi_falsh_sendbyte</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_ReadFast_1Byte
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_Bytes
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_1Byte
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>

<P><STRONG><a name="[65]"></a>M25P80_CMD1B</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[67]"></a>M25P80_CMD1B_READ1B</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[68]"></a>M25P80_CMD1B_S1B</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
</UL>

<P><STRONG><a name="[69]"></a>M25P80_Write_En</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[6a]"></a>M25P80_WP_En</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_S1B
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B_READ1B
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[6b]"></a>M25P80_Busy</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Read_Bytes
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_Bytes
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_1Byte
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Bulk_Erase
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Section_Erase
</UL>

<P><STRONG><a name="[6c]"></a>M25P80_Section_Erase</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[6d]"></a>M25P80_Bulk_Erase</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_CMD1B
</UL>

<P><STRONG><a name="[6e]"></a>M25P80_Write_1Byte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[6f]"></a>M25P80_Write_Bytes</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_WP_En
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Write_En
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[70]"></a>M25P80_Read_1Byte</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[71]"></a>M25P80_Read_Bytes</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P80_Busy
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[fa]"></a>SSPSend</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>SSPReceive</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ssp.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>M25P80_ReadFast_1Byte</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_falsh_sendbyte
</UL>

<P><STRONG><a name="[7d]"></a>Led_Fire_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[7c]"></a>Led_Fault_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[7b]"></a>Led_Wireless_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[7a]"></a>Led_Silence_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[79]"></a>Led_Run_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[78]"></a>Led_Fire_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[77]"></a>Led_Fault_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[76]"></a>Led_Wireless_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[75]"></a>Led_Silence_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[74]"></a>Led_Run_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[73]"></a>led_init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = led_init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[83]"></a>Led_Fire_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
</UL>

<P><STRONG><a name="[82]"></a>Led_Fault_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
</UL>

<P><STRONG><a name="[81]"></a>Led_Wireless_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
</UL>

<P><STRONG><a name="[80]"></a>Led_Silence_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
</UL>

<P><STRONG><a name="[7f]"></a>Led_Run_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_on
</UL>

<P><STRONG><a name="[7e]"></a>led_on</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_On
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_On
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_On
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_On
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_On
</UL>

<P><STRONG><a name="[84]"></a>Led_Off</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Run_Off
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Silence_Off
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Wireless_Off
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fault_Off
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Fire_Off
</UL>

<P><STRONG><a name="[a9]"></a>Relay_Init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, relay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[fc]"></a>Fire_Relay_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, relay.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>Fire_Relay_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, relay.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>Fault_Relay_On</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, relay.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>Fault_Relay_Off</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, relay.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>DelayMs</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd12864.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>DATAout</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>

<P><STRONG><a name="[85]"></a>CheckState</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDoubleByte
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>

<P><STRONG><a name="[87]"></a>SendCommandToLCD</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnOff
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartLine
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[88]"></a>SetLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetLine &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[89]"></a>SetStartLine</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetStartLine &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[8a]"></a>SetColumn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[8b]"></a>SetOnOff</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SetOnOff &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCommandToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[8c]"></a>WriteByte</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteByte &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[8d]"></a>WriteDoubleByte</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>

<P><STRONG><a name="[8e]"></a>WriteBlackByte</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATAout
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
</UL>

<P><STRONG><a name="[90]"></a>SelectScreen</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lcd12864.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaynumberBlack
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Displaynumber
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display1
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayBlack
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZK
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayJBHZKBlack
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear16Screen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
</UL>

<P><STRONG><a name="[8f]"></a>ClearScreen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlue
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[91]"></a>Clear16Screen</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[101]"></a>delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd12864.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>delay_long</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd12864.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>lcd_init</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd12864.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lcd_init &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOnOff
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartLine
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckState
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[103]"></a>WriteBytedata</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd12864.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>DisplayJBHZKBlack</STRONG> (Thumb, 444 bytes, Stack size 64 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[94]"></a>DisplayJBHZK</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[95]"></a>Display</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[96]"></a>DisplayBlack</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[97]"></a>Display1</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[104]"></a>DisplaynumberJBHZK</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd12864.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>Displaynumber</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[99]"></a>DisplaynumberBlack</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelectScreen
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlackByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[9a]"></a>WriteBlue</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lcd12864.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteByte
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetColumn
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLine
</UL>

<P><STRONG><a name="[105]"></a>pin023_extint_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, extint.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>pin024_extint_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_init
</UL>

<P><STRONG><a name="[9b]"></a>extint3_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_init
</UL>

<P><STRONG><a name="[9e]"></a>extint3_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = extint3_init &rArr; extint3_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin024_extint_init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[a2]"></a>pin211_extint_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_init
</UL>

<P><STRONG><a name="[a0]"></a>extint1_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = extint1_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_init
</UL>

<P><STRONG><a name="[a1]"></a>extint1_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = extint1_init &rArr; extint1_enable &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_enable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin211_extint_init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[42]"></a>hardware_init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = hardware_init &rArr; lcd_init &rArr; ClearScreen &rArr; SetColumn &rArr; SendCommandToLCD &rArr; CheckState &rArr; DATAout
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_Set
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_all_init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Timer_20ms
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Timer_10ms
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Timer_200us
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3d]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[106]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[107]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__rt_fp_status_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[41]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[37]"></a>_fp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[108]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[51]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_enable
</UL>

<P><STRONG><a name="[50]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_enable
</UL>

<P><STRONG><a name="[59]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, timer_all.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_all_init
</UL>

<P><STRONG><a name="[58]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, timer_all.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_all_init
</UL>

<P><STRONG><a name="[9d]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
</UL>

<P><STRONG><a name="[9c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, extint.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint1_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extint3_enable
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
